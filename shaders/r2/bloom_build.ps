#include "common.h"

struct		v2p
{
	float2 tc0:		TEXCOORD0;	// Texture coordinates	(for sampling maps)
	float2 tc1:		TEXCOORD1;	// Texture coordinates	(for sampling maps)
	float2 tc2:		TEXCOORD2;	// Texture coordinates	(for sampling maps)
	float2 tc3:		TEXCOORD3;	// Texture coordinates	(for sampling maps)
};

uniform half4	b_params;

//////////////////////////////////////////////////////////////////////////////////////////
// Pixel
half4	main	( v2p I )	: COLOR
{
	// hi-rgb.base-lum

	float i = 0.f;

	half3	s0	=	tex2D	(s_image,	I.tc0 + float2( i,0 ) );
	half3	s1	=	tex2D	(s_image,	I.tc1 + float2( -i,0 ) );
	half3	s2	=	tex2D	(s_image,	I.tc2 + float2( 0,i ) );
	half3	s3	=	tex2D	(s_image,	I.tc3 + float2( 0,-i ) );

	half3	s4	=	tex2D	(s_image,	I.tc0 + float2( i,i ) );
	half3	s5	=	tex2D	(s_image,	I.tc1 + float2( -i,i ) );
	half3	s6	=	tex2D	(s_image,	I.tc2 + float2( i,-i ) );
	half3	s7	=	tex2D	(s_image,	I.tc3 + float2( -i,-i ) );


	half3	avg	= (s0+s1+s2+s3+s4+s5+s6+s7)*ECB_BLOOM_BRIGHTNESS/8;
	half 	hi	= dot(avg,1.h)-b_params.x;	// assume def_hdr equal to 3.0

	return	half4(avg,hi);
}
